- Classic Simulator:
	- TODOHERE: decide spring coeffs - wrt potential energy, and wrt Hooke simulators
		- Both spring coeffs?
	- Put spring coeff calc'n as in Floating Sandbox
	- Add # of iterations parameter
		- Simulator
		- SettingsDialog

= Measurements:
	= New events/callbacks:
		- OnMeasurements
			- Calc'd, managed, and invoked by controller
			- Contains:
				- Bending
				- Potential energy
				- Kinetic energy
				+ Update elapsed time x 2 (last, avg)
		+ Subscribed to by ProbePanel
			+ Displays scalars and/or time series
	- Enhance materials:
		= StructuralMaterial and json database:
			- XXX Fixed
			- XXX BendingProbe
		- ObjectBuilder => Object
		- ClassicSimulator interpretation of fixed

==================================

TODOOLD

- Fix #pragma pack

= Initial conditions:
	+ Gravity:
		+ Goes to SimulationParameters, as vec2f AssignedGravity,
		  via SimulationController::EnableGravity(bool)
			+ Comment on convenience
	+ Move:
		+ As now
	+ Pin:
		+ Tool
		+ Sets via Points::SetFrozenCoefficient(...)
		+ Render: also uploaded as part of Points, always
			+ Shader: black

	- Particle Force:
		- UI:
			- When Particle Force engaged: at click/particle selection, open window for {direction & magnitude}, {remove}
		- Sets via Points::SetAssignedForce(...)
		- Render: uploaded as vectors by SimulationController at Render()
			- Enabled/Disabled by menu item => SimulationController::mDoRenderAssignedParticleForces

= UI:		
	= ControlToolBar (left):
		+ Keyboard shortcuts
			+ Tooltips
		+ Controls:
			+ SimulatorType drop-down
				+ Move up & add "Simulator:" label above
			+ Simulation control buttons
			+ Initial conditions buttons
			+ OpenObject, Reset buttons
		- Pass initial state (simulation control state, doGravity, tool)  to toolbar
	= ProbeToolBar (bottom):
		+ Migrate EventPanel here
		- Also displays basic stats: via TBD
	- Application Icons

	- Load Object

-------------------------------------------------------

- Misc:
	- Check assembly of SimulationController::Render() wrt accesses to mObject->GetSprings()

	- ProbePanel:
		- ScalarTimeSeries
		- Scalar
			- Also @ EventHandler
		- TODO: also used to display stats & simulator-specific outputs
			- Simulation step #
			- Simulation time
			- Update elapsed: last, avg

####################################################################################################
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
####################################################################################################

DONE:

+ Get started with V 1.0:
	+ Containers, buffers, special vectors
	+ ResourceLocator
	+ StructuralMaterial
	+ StructuralMaterialDatabase
	+ Points
		+ Phys: position, velocity
		+ Network: springs
		+ Render: render radius, render color (vec4f), factory render color
	+ Springs
		+ Physics:
			+ Stiffness
			+ RestLength
		+ Network
		+ Render: render thickness, render color (vec4f), factory render color
	+ Object: purely data
		+ Points
		+ Springs
	+ ObjectDefinition/File
	+ ObjectBuilder

	+ ViewModel
	+ RenderContext skeleton

	+ SimulationController

	+ MainFrame
	+ MainApp

	+ Add to GitHub

+ Make json

+ Rendering:
	+ MainFrame:
		+ Always render with timer loop
		+ mMainGLCanvas.Refresh()
			+ Change OnPaint to be on canvas
			+ OnPaint: SimulationController.Render()
	+ RenderContext:
		! RenderContext does not take point count, does everything at upload
		+ API: 
			+ cctor
				+ Load shaders
				+ Setup VBOs
				+ Set params
			+ RenderStart()
			+ Upload(...all...)
				+ Points
					+ Shader
				+ Springs
					- Shader
			+ RenderEnd()
				+ Run all shaders
		+ Complete:
			+ OnViewModelUpdated()

+ Interactions:
	+ Tools
	+ ToolController
	+ Mouse-taking @ MainFrame (see 'TODO')
	+ Do shift @ MouseDown & MouseMove, passing as boolean to ToolController::OnMouseXYZ(.)
	+ See move

+ Put timer back
	+ Rename "RenderTimer" as "SimulationTimer"
	+ On timer:
		+ Detect shift and send to ToolController
			+ Like before
			+ Remove extra shift boolean at others
		+ Invoke ToolController::Update
			+ Remove other invocations
+ Reset menu

+ Point highlight when picked
	+ Tool: Controller->HighlightPoint(elementIndex, true/false)
		+ new Points buffer: float highlight
		+ Uploaded to RenderContext
			+ ...which populates float in struct
+ BGColor

+ ViewModel: recalc zoom at resize
	+ See if exists API to get max size
	+ Communicate size @ controller creation
		+ See if available by then
	+ Also do camera calculation

+ MoveTool:
	+ Consider offset, not absolute position
	+ Controller::GetPointPosition(), store in engagement state, and use it for offset

+ OpenGL on separate thread

================================================================

+ UI Toolbars:
	+ Simulation control:
		+ Play: 1 simulation step per-second
		+ Fast-Forward: 1 simulation step as fast as possible
		+ Pause: step on-demand				
		+ UI:
			+ All sticky buttons, mutex
			+ Pause: space
			+ Step on-demand: via Enter
				+ Only do if currently selected
		
	- Initial conditions:
		+ Gravity (boolean)
		+ Move
		+ Pin
		+ Particle Force
		+ UI:
			+ Gravity: sticky button, independent
			+ Move, Pin, Particle Forces: sticky buttons, mutex
			+ Remove Tools menu
	+ Simulator type change:
		+ SimulationController::SetSimulator(enum from SLabTypes)
			+ Changes simulator and resets
				+ SimulationController holds only one simulator, the current one

+ ISimulator architecture:
	+ Files:
		+ Simulator/Common
			+ ISimulator
			+ SimulatorCommonParameters.h
			+ SimulatorRegistry (static)
		+ Simulator/Classic
			+ SimulatorClassic
			+ SimulatorClassicParameters.h
	+ SimulationParameters:
		+ SimulatorCommonParameters member
			+ In SimulatorCommonParameters.h
		+ SimulatorClassicParameters member
			+ From own include
	+ <SimulatorXXX: ISimulator>
		+ cctor(Object, SimulationParameters)
		+ OnSimulationParametersChanged(SimulationParameters)	
	+ Setting paramers:
		+ Controller::Set(common parameter @ SimulationParameters)
		+ Controller::Set(specific parameter @ SimulationParameters::SimulatorXParameters)
		+ Both: cause invocation - later - of ISimulator->OnSimulationParametersChanged(SimulationParameters)
			+ Controlled via controller's mAreParametersDirty, @ beginning of simulation step
				+ Reset after use

+ Do "ClassicSimulator"
	+ Do

+ Decide whether to change spring reduction fraction into spring stiffness, and also damping
	+ If so, recalc defaults to match FS
	+ If so, nuke dt's
	+ & rename both, & Tooltips
	
+ MT RenderContext: exceptions
	+ The thing that's ahred_ptr is the TaskCompletion
	+ TaskCompletion stores exc message
	+ Wait throws
	+ Test w/shader error
	+ Test w/OpenGL version

+ Nuke BufferAllocator & AllocWorkBuffer/Copy methods

+ SettingsDialog
	+ Settings
	+ SettingsManager
		+ Create @ MainFrame
		+ Takes SimulationController directly
	+ CommonParams, SimulationController and SettingsManager:
		+ Gravity
		+ dt
		+ MassAdjustment
		+ GlobalDamping
	+ Dialog
		+ One static box per common + each simulator
	+ Use params @ Simulator
	+ Open via toolbar, together with Reset and Open
		+ "Actions"
		+ Leave in menu, and add "Settings..."
